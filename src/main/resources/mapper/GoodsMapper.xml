<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.donno.nj.dao.GoodsDao">

    <resultMap id="DetailResultMap" type="com.donno.nj.domain.Goods">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="specifications" property="specifications" jdbcType="VARCHAR"/>
        <result column="unit" property="unit" jdbcType="VARCHAR"/>
        <result column="weight" property="weight" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="price" property="price" jdbcType="FLOAT"/>
        <result column="life_expectancy" property="lifeExpectancy" jdbcType="INTEGER"/>
        <result column="note" property="note" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>

        <association property="goodsType" column="type_idx" select="com.donno.nj.dao.GoodsTypeDao.findById">
        </association>

        <association property="area" column="area_idx" select="com.donno.nj.dao.AreaDao.findById">
        </association>

    </resultMap>

    <sql id="TblGoods">
        t_goods
    </sql>

    <sql id="InsertColumnList">
       code, name ,type_idx,area_idx,specifications,unit,weight,life_expectancy,price,status,note
    </sql>

    <insert id="insert">
        INSERT IGNORE INTO <include refid="TblGoods"/>(<include refid="InsertColumnList"/>)
        VALUES( #{code}, #{name} , #{goodsType.id},#{area.id},#{specifications},#{unit},#{weight},#{lifeExpectancy},#{price}, #{status}, #{note})
    </insert>

    <delete id="deleteByIdx" parameterType="java.lang.Integer">
    DELETE FROM <include refid="TblGoods"/> WHERE id= #{id}
    </delete>


    <update id="update">
    UPDATE <include refid="TblGoods"/>
    <set>
        <if test="code != null">code = #{code},</if>
        <if test="name != null">name = #{name},</if>
        <if test="specifications != null">specifications = #{specifications},</if>
        <if test="unit != null">unit = #{unit},</if>
        <if test="weight != null">weight = #{weight},</if>
        <if test="lifeExpectancy != null">life_expectancy = #{lifeExpectancy},</if>
        <if test="price != null">price = #{price},</if>
        <if test="status != null">status = #{status},</if>
        <if test="note != null">note = #{note},</if>

        <if test="area != null">area_idx = #{area.id},</if>

        <if test="goodsType != null">
          <if test="goodsType.id != null">type_idx = #{goodsType.id},</if>
        </if>
    </set>
    WHERE id = #{id}
    </update>



    <select id="findByCode" resultMap="DetailResultMap">
        SELECT *
        FROM <include refid="TblGoods"/>
        WHERE
        code =  #{code}
    </select>

    <select id="findById" resultMap="DetailResultMap">
        SELECT *
        FROM <include refid="TblGoods"/>
        WHERE
        id =  #{id}
    </select>

    <sql id="getListCondition">
        <where>
            <if test="province != null">
                area_idx in (select id from t_area where province = #{province}
                <if test="city != null">and city = #{city}
                    <if test="county != null">
                        and (county = #{county} or county = "全部区")
                    </if>
                </if>
                )
            </if>


            <if test="code != null">AND  code = #{code}</if>
            <if test="name != null">
                AND  name like CONCAT(CONCAT('%', #{name}), '%')
            </if>
            <if test="specifications != null">AND  specifications = #{specifications}</if>
            <if test="weight != null">AND  weight = #{weight}</if>
            <if test="life_expectancy != null">AND  life_expectancy = #{life_expectancy}</if>
            <if test="price != null">AND  price = #{price}</if>
            <if test="status != null">AND  status = #{status}</if>
            <if test="typeCode != null">AND  type_idx = ( select id from t_goods_type where code = #{typeCode})</if>
            <if test="typeName != null">AND  type_idx = ( select id from t_goods_type where name like CONCAT(CONCAT('%', #{typeName}), '%') )</if>
        </where>
    </sql>

    <select id="getList" resultMap="DetailResultMap">
    SELECT *
    FROM <include refid="TblGoods"/>
        <include refid="getListCondition"/>
        <if test="orderBy != null">
            <if test="orderBy != ''">
                ORDER BY   ${orderBy}
            </if>
        </if>

        <if test="limit != null" >
            <if test="offset != null" >
                limit #{limit} offset #{offset};
            </if>
        </if>
    </select>


    <select id="count" resultType="Integer">
        SELECT COUNT(*)
        FROM <include refid="TblGoods"/>
        <include refid="getListCondition"/>
    </select>

    <select id="getAdjustPriceHistory" resultType="com.donno.nj.domain.AdjustPriceHistory">
        SELECT *
        FROM (select a.code,a.name,a.price,t_adjust_price_schedule.effect_time from (select t_adjust_price_detail.*,t_goods.code,t_goods.name from
        t_adjust_price_detail inner join t_goods on t_adjust_price_detail.goods_idx=t_goods.id) as a inner join t_adjust_price_schedule on
        a.schedule_idx= t_adjust_price_schedule.id) as b
        WHERE
        code IS NOT NULL
        <if test="code != null">AND  code = #{code}</if>
        ORDER BY code,effect_time
    </select>

</mapper>