<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.donno.nj.dao.ComplaintDao">

    <resultMap id="DetailResultMap" type="com.donno.nj.domain.Complaint">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="complaint_sn" property="complaintSn" jdbcType="VARCHAR"/>
        <result column="process_status" property="eProcessStatus" typeHandler="com.donno.nj.domain.EnumKeyTypeHandler"/>
        <result column="detail" property="detail" jdbcType="VARCHAR"/>
        <result column="reslove_info" property="resloveInfo" jdbcType="VARCHAR"/>



        <result column="addr_province" property="recvAddr.province" jdbcType="VARCHAR"/>
        <result column="addr_city" property="recvAddr.city" jdbcType="VARCHAR"/>
        <result column="addr_county" property="recvAddr.county" jdbcType="VARCHAR"/>
        <result column="addr_detail" property="recvAddr.detail" jdbcType="VARCHAR"/>
        <result column="recv_name" property="recvName" jdbcType="VARCHAR"/>
        <result column="recv_phone" property="recvPhone" jdbcType="VARCHAR"/>
        <result column="reserve_time" property="reserveTime" jdbcType="TIMESTAMP"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>


        <association property="complaintType" column="complainttype_idx" select="com.donno.nj.dao.ComplaintTypeDao.findById">
        </association>
        <association property="department" column="laibleDepartment_idx" select="com.donno.nj.dao.DepartmentDao.findById">
        </association>
        <association property="dealedUser" column="dealedUser_idx" select="com.donno.nj.dao.SysUserDao.selectById">
        </association>
        <association property="customer" column="requestCustomer_idx" select="com.donno.nj.dao.CustomerDao.selectById">
        </association>
    </resultMap>

    <sql id="TableName">
        t_complaint
    </sql>

    <sql id="InsertColumnList">
        complaint_sn, process_status ,detail,addr_province,addr_city,addr_county,addr_detail,
        recv_name,recv_phone,reserve_time,reslove_info,
        complainttype_idx,laibleDepartment_idx,dealedUser_idx,requestCustomer_idx
    </sql>

    <insert id="insert">
        INSERT IGNORE INTO <include refid="TableName"/>(<include refid="InsertColumnList"/>)
        VALUES( #{complaintSn}, #{eProcessStatus.index} , #{detail},#{recvAddr.province},#{recvAddr.city},#{recvAddr.county},#{recvAddr.detail}
        ,#{recvName},#{recvPhone},#{reserveTime},#{resloveInfo},#{complaintType.id},#{department.id},#{dealedUser.id},#{customer.id})
    </insert>

    <delete id="delete" parameterType="java.lang.Integer">
        DELETE FROM <include refid="TableName"/> WHERE id= #{id}
    </delete>


    <update id="update">
        UPDATE <include refid="TableName"/>
        <set>
            <if test="complaintSn != null">complaint_sn = #{complaintSn},</if>
            <if test="eProcessStatus != null">process_status = #{eProcessStatus.index},</if>
            <if test="detail != null">detail = #{detail},</if>
            <if test="resloveInfo != null">reslove_info = #{resloveInfo},</if>
            <if test="recvAddr != null">
                <if test="recvAddr.province != null">
                    addr_province = #{recvAddr.province},
                </if>
                <if test="recvAddr.city != null">
                    addr_city = #{recvAddr.city},
                </if>
                <if test="recvAddr.county != null">
                    addr_county = #{recvAddr.county},
                </if>
                <if test="recvAddr.detail != null">
                    addr_detail = #{recvAddr.detail},
                </if>
            </if>
            <if test="recvName != null">recv_name = #{recvName},</if>
            <if test="recvPhone != null">recv_phone = #{recvPhone},</if>
            <if test="reserveTime != null">reserve_time = #{reserveTime},</if>

            <if test="complaintType != null">
                <if test="complaintType.id != null">complainttype_idx = #{complaintType.id},</if>
            </if>

            <if test="department != null">
                <if test="department.id != null">laibleDepartment_idx = #{department.id},</if>
            </if>

            <if test="dealedUser != null">
                <if test="dealedUser.id != null">dealedUser_idx = #{dealedUser.id},</if>
            </if>

            <if test="customer != null">
                <if test="customer.id != null">requestCustomer_idx = #{customer.id},</if>
            </if>


        </set>
        WHERE id = #{id}
    </update>



    <select id="findBySn" resultMap="DetailResultMap">
        SELECT *
        FROM <include refid="TableName"/>
        WHERE
        complaint_sn =  #{sn}
    </select>

    <select id="findById" resultMap="DetailResultMap">
        SELECT *
        FROM <include refid="TableName"/>
        WHERE
        id =  #{id}
    </select>


    <select id="getList" resultMap="DetailResultMap">
        SELECT *
        FROM <include refid="TableName"/>
        WHERE
        id > 0
        <if test="complaintSn != null">AND  complaint_sn = #{complaintSn}</if>

        <if test="processStatus != null">AND  process_status = #{processStatus.index}</if>

        <if test="complaintTypeCode != null">AND  complainttype_idx = ( select id from t_complaint_type where code = #{complaintTypeCode})</if>

        <if test="dealedUserId != null">AND  dealedUser_idx = ( select id from t_user where user_id = #{dealedUserId})</if>

        <if test="requestCustomerId != null">AND  requestCustomer_idx = ( select id from t_user where user_id = #{requestCustomerId})</if>

        <if test="liableDepartmentCode != null">AND  laibleDepartment_idx = ( select id from t_department where code = #{liableDepartmentCode})</if>

        <if test="startTime != null"  >
            <if test="endTime != null">
                AND  (create_time  BETWEEN #{startTime}  and #{endTime} )
            </if>
        </if>

        <if test="orderBy != null">
            <if test="orderBy != ''">
                ORDER BY   ${orderBy}
            </if>
        </if>

        <if test="limit != null" >
            <if test="offset != null" >
                limit #{limit} offset #{offset};
            </if>
        </if>
    </select>


    <select id="count" resultType="Integer">
        SELECT COUNT(*)
        FROM <include refid="TableName"/>
        WHERE
        id > 0
        <if test="complaintSn != null">AND  complaint_sn = #{complaintSn}</if>

        <if test="processStatus != null">AND  process_status = #{processStatus.index}</if>

        <if test="complaintTypeCode != null">AND  complainttype_idx = ( select id from t_complaint_type where code = #{complaintTypeCode})</if>

        <if test="dealedUserId != null">AND  dealedUser_idx = ( select id from t_user where user_id = #{dealedUserId})</if>

        <if test="requestCustomerId != null">AND  requestCustomer_idx = ( select id from t_user where user_id = #{requestCustomerId})</if>

        <if test="liableDepartmentCode != null">AND  laibleDepartment_idx = ( select id from t_department where code = #{liableDepartmentCode})</if>

        <if test="startTime != null"  >
            <if test="endTime != null">
                AND  (create_time  BETWEEN #{startTime}  and #{endTime} )
            </if>
        </if>
    </select>
</mapper>