<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.donno.nj.dao.TicketDao">
    <resultMap id="BaseResultMap" type="com.donno.nj.domain.Ticket">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="ticket_sn" property="ticketSn" jdbcType="VARCHAR"/>
        <result column="price" property="price" jdbcType="DOUBLE"/>
        <result column="spec_code" property="specCode" jdbcType="VARCHAR"/>
        <result column="spec_name" property="specName" jdbcType="VARCHAR"/>
        <result column="use_status" property="ticketStatus" typeHandler="com.donno.nj.domain.EnumKeyTypeHandler"/>

        <result column="exp_time_start" property="startDate" jdbcType="TIMESTAMP"/>
        <result column="exp_time_end" property="endDate" jdbcType="TIMESTAMP"/>
        <result column="use_time" property="useTime" jdbcType="TIMESTAMP"/>

        <result column="note" property="note" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>

        <!--<association property="spec" column="spec_idx" select="com.donno.nj.dao.GasCylinderSpecDao.findById">-->
        <!--</association>-->

        <!--<association property="spec" column="spec_idx" select="com.donno.nj.dao.GoodsDao.findById">-->
        <!--</association>-->

        <association property="salemanId" column="saleman_idx" select="com.donno.nj.dao.UserDao.findUserIdById">
        </association>

        <association property="salemanName" column="saleman_idx" select="com.donno.nj.dao.UserDao.findUserNameById">
        </association>

        <association property="saleDepartmentCode" column="sale_dep_idx" select="com.donno.nj.dao.DepartmentDao.findCodeById">
        </association>

        <association property="customer" column="customer_idx" select="com.donno.nj.dao.UserDao.findById">
        </association>

        <!--<association property="operator" column="oper_idx" select="com.donno.nj.dao.UserDao.findById">-->
        <!--</association>-->

    </resultMap>

    <sql id="TableName">
        t_ticket
    </sql>

    <sql id="QryFromTable">
        t_ticket,t_goods
    </sql>



    <sql id="QueryColumnList">
       t_ticket.id,t_ticket.ticket_sn, t_ticket.customer_idx, t_ticket.saleman_idx,t_ticket.sale_dep_idx,t_ticket.price,  t_ticket.exp_time_start,t_ticket.exp_time_end,t_ticket.use_status,t_ticket.use_time, t_ticket.note,t_ticket.create_time,t_ticket.update_time,
        t_goods.specifications as spec_name, t_goods.code as spec_code
    </sql>

    <sql id="InsertColumnList">
       ticket_sn,customer_idx,spec_idx, saleman_idx,sale_dep_idx,price,  exp_time_start,exp_time_end,use_status,use_time, note
    </sql>


    <sql id="getListCondition">
        <where>
            t_ticket.id > 0
            AND
            t_ticket.spec_idx = t_goods.id
            <if test="ticketSn != null">
                and t_ticket.ticket_sn =  #{ticketSn}
            </if>
            <if test="customerUserId != null">
                and t_ticket.customer_idx in (SELECT  id from t_user where user_id = #{customerUserId})
            </if>


            <if test="useStatus != null">
                and t_ticket.use_status = #{useStatus}
            </if>

            <!--<if test="specCode != null">-->
                <!--and spec_idx = (SELECT  id from t_gas_cylinder_spec where code = #{specCode})-->
            <!--</if>-->

            <if test="specCode != null">
                and t_ticket.spec_idx = (SELECT  id from t_goods where code = #{specCode})
            </if>

            <!--<if test="expireType != null">-->
                <!--<if test="expireType == 0">-->
                  <!--and  t_ticket.exp_time_end  >=  DATE_FORMAT(now(), '%Y-%m-%d')-->
                <!--</if>-->
                <!--<if test="expireType == 1">-->
                  <!--and  ( TO_DAYS(NOW()) -  TO_DAYS(t_ticket.exp_time_end) ) > 0-->
                <!--</if>-->
                <!--&lt;!&ndash;<if test="expireType == 2">&ndash;&gt;-->
                    <!--&lt;!&ndash;and  DATE_FORMAT(now(), '%Y-%m-%d')  BETWEEN t_ticket.exp_time_start AND  t_ticket.exp_time_end&ndash;&gt;-->
                <!--&lt;!&ndash;</if>&ndash;&gt;-->
            <!--</if>-->

            <if test="expired != null">
              <if test="expired == true">
                  and   (DATE_FORMAT(now(), '%Y-%m-%d') >= t_ticket.exp_time_end)
              </if>
              <if test="expired != true">
                  and  t_ticket.exp_time_end  >=  DATE_FORMAT(now(), '%Y-%m-%d')
              </if>
            </if>


            <if test="saleStartTime != null">
                and t_ticket.create_time >= #{saleStartTime}
            </if>

            <if test="saleEndTime != null">
                and #{saleEndTime}  >= t_ticket.create_time
            </if>

            <if test="departmentCode != null">
                and t_ticket.sale_dep_idx in ( select t_department.id from t_department where t_department.code = #{departmentCode})
            </if>

            <if test="saleUserId != null">
                and t_ticket.saleman_idx in (select t_user.id from t_user where t_user.user_id =#{saleUserId} )
            </if>



        </where>
    </sql>

    <select id="getList" resultMap="BaseResultMap">
        SELECT <include refid="QueryColumnList"/>
        FROM <include refid="QryFromTable"/>
        <include refid="getListCondition"/>

        <if test="orderBy != null">
            <if test="orderBy != ''">
                ORDER BY   ${orderBy}
            </if>
        </if>

        <if test="limit != null" >
            <if test="offset != null" >
                limit #{limit} offset #{offset};
            </if>
        </if>

    </select>

    <select id="count" resultType="Integer">
        SELECT COUNT(*)
        FROM  <include refid="QryFromTable"/>
        <include refid="getListCondition"/>
    </select>


    <select id="findById" resultMap="BaseResultMap">
        SELECT <include refid="QueryColumnList"/>
        FROM <include refid="QryFromTable"/>
        WHERE
        t_ticket.spec_idx = t_goods.id
        AND
        t_ticket.id = #{id}
    </select>

    <select id="findBySn" resultMap="BaseResultMap">
        SELECT <include refid="QueryColumnList"/>
        FROM <include refid="QryFromTable"/>
        WHERE
        t_ticket.spec_idx = t_goods.id
        AND
        t_ticket.ticket_sn = #{ticketSn}
    </select>

    <insert id="insert">
        INSERT IGNORE INTO <include refid="TableName"/>(<include refid="InsertColumnList"/>)
        VALUES( #{ticketSn},
        (select id from t_user where user_id = #{customer.userId} ),
        (select id from t_goods where code = #{specCode} ),
        (select id from t_user where user_id = #{salemanId} ),
        (select department_idx from t_sysuser where user_idx = (select id from t_user where user_id = #{salemanId})),
        #{price},#{startDate},#{endDate},#{ticketStatus.index},#{useTime},#{note})
    </insert>

    <delete id="delete" parameterType="Integer">
        DELETE FROM <include refid="TableName"/>
        WHERE
        id = #{id}
    </delete>

    <update id="update">
        UPDATE <include refid="TableName"/>
        <set>
            <if test="ticketSn != null">ticket_sn = #{ticketSn},</if>
            <if test="customer != null">customer_idx = (SELECT  id from t_user where user_id = #{customer.userId}),</if>
            <if test="salemanId != null">
                saleman_idx = (SELECT  id from t_user where user_id = #{salemanId}),
                sale_dep_idx = (select department_idx from t_sysuser where user_idx = (select id from t_user where user_id = #{salemanId})),
            </if>
            <if test="specCode != null">spec_idx = (SELECT  id from t_goods where code = #{specCode}),</if>
            <if test="price != null">price = #{price},</if>
            <if test="ticketStatus != null">use_status = #{ticketStatus.index},</if>
            <if test="useTime != null">use_time = #{useTime},</if>
            <if test="startDate != null">exp_time_start = #{startDate},</if>
            <if test="endDate != null">exp_time_end = #{endDate},</if>
            <if test="note != null">note = #{note}</if>
        </set>
        WHERE id = #{id}
    </update>
</mapper>