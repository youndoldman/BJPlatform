<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.donno.nj.dao.CustomerCreditDetailDao">
    <resultMap id="BaseResultMap" type="com.donno.nj.domain.CustomerCreditDetail">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="amount" property="amount" jdbcType="DOUBLE"/>
        <result column="credit_type" property="creditType" typeHandler="com.donno.nj.domain.EnumKeyTypeHandler"/>
        <result column="order_sn" property="orderSn" jdbcType="VARCHAR"/>
        <result column="note" property="note" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>

    </resultMap>

    <sql id="TableName">
        t_customer_credit_detail
    </sql>

    <sql id="QryFromTable">
        t_customer_credit_detail,t_user,t_order
    </sql>



    <sql id="QueryColumnList">
        t_customer_credit_detail.id,t_user.user_id,t_customer_credit_detail.amount,t_customer_credit_detail.credit_type,t_customer_credit_detail.note,
        t_customer_credit_detail.create_time,t_order.order_sn
    </sql>

    <sql id="InsertColumnList">
        user_idx,amount,credit_type,order_idx,note
    </sql>

    <sql id="getListCondition">
        <where>
            t_customer_credit_detail.id > 0
            AND
            t_customer_credit_detail.user_idx = t_user.id
            AND
            t_customer_credit_detail.order_idx = t_order.id

            <if test="userId != null">
                and t_customer_credit_detail.user_idx = (SELECT  id from t_user where user_id = #{userId})
            </if>

            <if test="creditType != null">
                and t_customer_credit_detail.credit_type = #{creditType})
            </if>

            <if test="startTime != null">
                and   t_customer_credit_detail.create_time >=   #{startTime}
            </if>

            <if test="endTime != null">
                and    #{endTime}  >=   t_customer_credit_detail.create_time
            </if>

        </where>
    </sql>

    <select id="getList" resultMap="BaseResultMap">
        SELECT <include refid="QueryColumnList"/>
        FROM <include refid="QryFromTable"/>
        <include refid="getListCondition"/>

        <if test="orderBy != null">
            <if test="orderBy != ''">
                ORDER BY   ${orderBy}
            </if>
        </if>

        <if test="limit != null" >
            <if test="offset != null" >
                limit #{limit} offset #{offset};
            </if>
        </if>

    </select>

    <select id="count" resultType="Integer">
        SELECT COUNT(*)
        FROM  <include refid="QryFromTable"/>
        <include refid="getListCondition"/>
    </select>


    <select id="findById" resultMap="BaseResultMap">
        SELECT <include refid="QueryColumnList"/>
        FROM <include refid="QryFromTable"/>
        WHERE
        t_customer_credit_detail.user_idx = t_user.id
        AND
        t_customer_credit_detail.order_idx = t_order.id
        AND
        t_customer_credit_detail.id = #{id}
    </select>

    <insert id="insert">
        INSERT IGNORE INTO <include refid="TableName"/>(<include refid="InsertColumnList"/>)
        VALUES(
        (select id from t_user where user_id = #{userId} ),
        #{amount},#{creditType.index},
        (select id from t_order where order_sn = #{orderSn} ),
        #{note})
    </insert>

    <delete id="delete" parameterType="Integer">
        DELETE FROM <include refid="TableName"/>
        WHERE
        id = #{id}
    </delete>


</mapper>