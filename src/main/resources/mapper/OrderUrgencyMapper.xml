<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.donno.nj.dao.OrderUrgencyDao">
    <resultMap id="BaseResultMap" type="com.donno.nj.domain.OrderUrgency">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="order_sn" property="orderSn" jdbcType="VARCHAR"/>
        <result column="note" property="note" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>

        <association property="orderSn" column="order_idx" select="com.donno.nj.dao.OrderDao.findOrderSnById">
        </association>

        <association property="userId" column="user_idx" select="com.donno.nj.dao.UserDao.findUserIdById">
        </association>

        <association property="userName" column="user_idx" select="com.donno.nj.dao.UserDao.findUserNameById">
        </association>

    </resultMap>

    <sql id="TableName">
        t_order_urgency
    </sql>

    <sql id="QryFromTable">
        t_order_urgency
    </sql>

    <sql id="QueryColumnList">
       t_order_urgency.*
    </sql>

    <sql id="InsertColumnList">
       order_idx,user_idx,note
    </sql>


    <sql id="getListCondition">
        <where>
            <if test="orderSn != null">
                and t_order_urgency.order_idx = (SELECT  id from t_order where order_sn = #{orderSn})
            </if>

            <if test="userId != null">
                and t_order_urgency.user_idx = (SELECT  id from t_user where user_id = #{userId})
            </if>

            <if test="startTime != null">
                and t_order_urgency.create_time >= #{startTime}
            </if>

            <if test="endTime != null">
                and #{endTime}  >= t_order_urgency.create_time
            </if>

        </where>
    </sql>

    <select id="getList" resultMap="BaseResultMap">
        SELECT <include refid="QueryColumnList"/>
        FROM <include refid="QryFromTable"/>
        <include refid="getListCondition"/>

        <if test="orderBy != null">
            <if test="orderBy != ''">
                ORDER BY   ${orderBy}
            </if>
        </if>

        <if test="limit != null" >
            <if test="offset != null" >
                limit #{limit} offset #{offset};
            </if>
        </if>

    </select>

    <select id="count" resultType="Integer">
        SELECT COUNT(*)
        FROM  <include refid="QryFromTable"/>
        <include refid="getListCondition"/>
    </select>


    <select id="findById" resultMap="BaseResultMap">
        SELECT <include refid="QueryColumnList"/>
        FROM <include refid="QryFromTable"/>
        WHERE
        t_order_urgency.id = #{id}
    </select>

    <insert id="insert">
        INSERT IGNORE INTO <include refid="TableName"/>(<include refid="InsertColumnList"/>)
        VALUES((select id from t_order where order_sn = #{orderSn}) ,
        (select customer_idx from t_order where order_sn = #{orderSn}) ,
        #{note})
    </insert>

    <delete id="delete" parameterType="Integer">
        DELETE FROM <include refid="TableName"/>
        WHERE
        id = #{id}
    </delete>

</mapper>