<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.donno.nj.dao.DepartmentDao">
    <resultMap id="BaseResultMap" type="com.donno.nj.domain.Department">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="note" property="note" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <association property="parentDepartment" column="parent_idx" select="com.donno.nj.dao.DepartmentDao.findById">
        </association>
    </resultMap>

    <sql id="TableName">
        t_department
    </sql>

    <sql id="QueryColumnList">
        id,code,name, parent_idx,note,create_time,update_time
    </sql>

    <sql id="InsertColumnList">
       code,name,parent_idx, note
    </sql>

    <select id="findById" resultMap="BaseResultMap">
        SELECT <include refid="QueryColumnList"/>
        FROM <include refid="TableName"/>
        WHERE
          id = #{id}
    </select>


    <select id="findByCode" resultMap="BaseResultMap">
        SELECT <include refid="QueryColumnList"/>
        FROM <include refid="TableName"/>
        WHERE
        code = #{code}
    </select>

    <!--<select id="findByCode" resultMap="BaseResultMap">-->
        <!--SELECT <include refid="QueryColumnList"/>-->
        <!--FROM <include refid="TableName"/>-->
        <!--WHERE-->
        <!--code = #{code}-->
    <!--</select>-->

    <select id="getList" resultMap="BaseResultMap">
        SELECT <include refid="QueryColumnList"/>
        FROM <include refid="TableName"/>
        <where>
            <if test="name != ''">
                name LIKE CONCAT('%',#{name},'%')
            </if>
            <if test="orderBy != ''">
                ORDER BY   ${orderBy}
            </if>
        </where>
        limit #{limit} offset #{offset};
    </select>


    <insert id="insert">
        INSERT IGNORE INTO <include refid="TableName"/>(<include refid="InsertColumnList"/>)
        VALUES(  #{name},#{code},#{parentIdx},#{note})
    </insert>

    <delete id="delete" parameterType="Integer">
        DELETE FROM <include refid="TableName"/> WHERE id=#{id}
    </delete>

    <update id="update">
        UPDATE <include refid="TableName"/>
        <set>
            <if test="parentIdx != null">paren = #{parentIdx},</if>
            <if test="name != null">name = #{name},</if>
            <if test="note != null">note = #{note}</if>
        </set>
        WHERE id = #{id}
    </update>
</mapper>