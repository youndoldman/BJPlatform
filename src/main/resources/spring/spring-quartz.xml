<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan base-package="com.donno.nj.task"/>

	<!-- JNDI连接数据库 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.db.driverClassName}" />
		<property name="url" value="${jdbc.db.url}" />
		<property name="username" value="${jdbc.db.username}" />
		<property name="password" value="${jdbc.db.password}" />
		<property name="maxWait" value="30000" />
		<property name="initialSize" value="1" />
		<property name="maxActive" value="8" />
		<property name="maxIdle" value="5" />
		<property name="minIdle" value="1" />
		<property name="timeBetweenEvictionRunsMillis" value="600000" />
		<property name="testOnBorrow" value="true" />
		<property name="testWhileIdle" value="true" />
		<property name="validationQuery" value="select 1 from dual" />
	</bean>

	<!-- 分布式事务配置 start -->

	<!-- 配置线程池-->
	<bean name="executor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="15"/>
		<property name="maxPoolSize" value="25"/>
		<property name="queueCapacity" value="100"/>
	</bean>

	<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!-- 配置调度任务-->
	<bean name="quartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" >
		<property name="configLocation" value="classpath:quartz.properties"/>
		<property name="dataSource" ref="dataSource"/>
		<property name="transactionManager" ref="transactionManager"/>

		<!-- 任务唯一的名称，将会持久化到数据库-->
		<property name="schedulerName" value="baseScheduler"/>

		<!-- 每台集群机器部署应用的时候会更新触发器-->
		<property name="overwriteExistingJobs" value="true"/>
		<property name="applicationContextSchedulerContextKey" value="appli"/>

		<property name="jobFactory">
			<bean class="com.donno.nj.task.AutowiringSpringBeanJobFactory"/>
		</property>

		<property name="triggers">
			<list>
				<ref bean="userAliveCheckJobsScheduler"/>
				<ref bean="adjustPriceJobsScheduler"/>
				<ref bean="overtimeJobsScheduler"/>
			</list>
		</property>

		<property name="jobDetails">
			<list>
				<ref bean="userAliveCheckJobs"/>
				<ref bean="adjustPriceJobs"/>
				<ref bean="overtimeJobs"/>
			</list>
		</property>

		<property name="taskExecutor" ref="executor"/>
	</bean>

	<!-- 配置Job详情 -->
	<bean name="userAliveCheckJobs"
		  class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass"
				  value="com.donno.nj.task.UserAliveCheckJobs" />
		<property name="durability" value="true" />
		<property name="requestsRecovery" value="true" />
	</bean>

	<bean name="adjustPriceJobs"
		  class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass"
				  value="com.donno.nj.task.AdjustPriceJobs" />
		<property name="durability" value="true" />
		<property name="requestsRecovery" value="true" />
	</bean>

	<bean name="overtimeJobs"
		  class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass"
				  value="com.donno.nj.task.OrderOvertimeJobs" />
		<property name="durability" value="true" />
		<property name="requestsRecovery" value="true" />
	</bean>


	<!-- 配置触发时间 -->
	<bean name="userAliveCheckJobsScheduler" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="userAliveCheckJobs"/>
		<property name="cronExpression">
			<value>0/20 * * * * ?</value>
		</property>
		<property name="timeZone">
			<value>GMT+8:00</value>
		</property>
	</bean>

	<!-- 配置触发时间 -->
	<bean name="adjustPriceJobsScheduler" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="adjustPriceJobs"/>
		<property name="cronExpression">
			<value>0/20 * * * * ?</value>
		</property>
		<property name="timeZone">
			<value>GMT+8:00</value>
		</property>
	</bean>

	<!-- 配置触发时间 -->
	<bean name="overtimeJobsScheduler" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="overtimeJobs"/>
		<property name="cronExpression">
			<value>0/300 * * * * ?</value>
		</property>
		<property name="timeZone">
			<value>GMT+8:00</value>
		</property>
	</bean>



	<!-- 分布式事务配置 end -->
</beans>